diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8df258e..5b6035c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,7 @@
-CMAKE_MINIMUM_REQUIRED(VERSION 3.3)
+cmake_minimum_required(VERSION 3.3)
 
 project(MUMPS VERSION 5.0.0 LANGUAGES C Fortran)
-SET(CMAKE_NO_SYSTEM_FROM_IMPORTED YES)
+set(CMAKE_NO_SYSTEM_FROM_IMPORTED YES)
 
 option(BUILD_TESTS "${PROJECT_NAME} - Build tests" ON)
 option(PACKAGE_CONFIG_DIR "Directory for package config files (relative to CMAKE_INSTALL_PREFIX)" "lib/cmake")
@@ -19,10 +19,10 @@ if (FORTRAN_MANGLING STREQUAL UpCase)
     set(FORTRAN_MANGLING UPPER)
 endif()
 
-find_package(MPI REQUIRED)
 find_package(BLAS ${BLAS_VERSION} REQUIRED)
 find_package(LAPACK ${LAPACK_VERSION} REQUIRED)
 find_package(SCALAPACK ${SCALAPACK_VERSION} REQUIRED)
+#find_package(MPI REQUIRED)
 
 if (USE_PARMETIS)
     message(STATUS "Use of MUMPS with ParMETIS requested. Looking for library...")
@@ -39,7 +39,7 @@ elseif(USE_SCOTCH)
     find_package(SCOTCH ${SCOTCH_VERSION} REQUIRED)
 endif()
 
-SET(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/fortran_modules)
+set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/fortran_modules)
 
 add_subdirectory(PORD)
 
@@ -174,9 +174,10 @@ set(mumps-src-arith
 foreach(lang f c)
     # Need to split c and fortran sources for VS
     add_library(mumps_common_${lang} ${mumps-src-${lang}})
-    target_link_libraries(mumps_common_${lang} PUBLIC blas scalapack pord)
-    target_include_directories(mumps_common_${lang} PRIVATE include PORD/include)
-    target_compile_definitions(mumps_common_${lang} PRIVATE pord ${FORTRAN_MANGLING})
+    target_link_libraries(mumps_common_${lang} PUBLIC scalapack pord)
+    #target_link_libraries(mumps_common_${lang} PRIVATE mpi)
+    target_include_directories(mumps_common_${lang} PRIVATE include)
+    target_compile_definitions(mumps_common_${lang} PRIVATE ${FORTRAN_MANGLING})
     if (USE_PTSCOTCH)
         target_compile_definitions(mumps_common_${lang} PRIVATE ptscotch)
         target_link_libraries(mumps_common_${lang} PUBLIC ptesmumps)
@@ -213,10 +214,10 @@ foreach(prec s d c z)
         add_library(${prec}mumps ${mumps-src-arith-${prec}})
         set_target_properties(${prec}mumps PROPERTIES
             OUTPUT_NAME ${prec}mumps-${MUMPS_VERSION})
+        target_include_directories(${prec}mumps PRIVATE include)
         target_link_libraries(${prec}mumps PUBLIC mumps_common)
         target_compile_definitions(${prec}mumps PRIVATE
             MUMPS_ARITH=MUMPS_ARITH_${prec}
-            pord
         )
         if (USE_PARMETIS)
             target_compile_definitions(${prec}mumps PRIVATE parmetis)
@@ -236,20 +237,20 @@ foreach(prec s d c z)
         # Arithmetic-dependent mumps c libraries
         add_library(${prec}mumps_c src/mumps_c.c)
         target_link_libraries(${prec}mumps_c PUBLIC mumps_common ${prec}mumps)
-        target_include_directories(${prec}mumps_c PRIVATE 
-            include PORD/include
-        )
+        target_include_directories(${prec}mumps_c PRIVATE include)
+   #     target_include_directories(${prec}mumps_c PRIVATE 
+   #         include PORD/include
+   #     )
         #target_link_libraries(${prec}mumps_c PRIVATE mumps_common)
         target_compile_definitions(${prec}mumps_c PRIVATE
             MUMPS_ARITH=MUMPS_ARITH_${prec}
             ${FORTRAN_MANGLING}
-            pord
         )
         
         list(APPEND PREC_LIBS ${prec}mumps ${prec}mumps_c)
-        target_include_directories(${prec}mumps PRIVATE 
-            include PORD/include
-        )
+  #      target_include_directories(${prec}mumps PRIVATE 
+  #          include PORD/include
+  #      )
         # Make sure the according header files are installed
         install(DIRECTORY include/ DESTINATION include
             FILES_MATCHING PATTERN "${prec}mu*.h")
@@ -258,7 +259,7 @@ endforeach()
 
 # Add global interface target for easy linking if the build precisions are not known.
 add_library(mumps INTERFACE)
-target_link_libraries(mumps INTERFACE mumps_common ${PREC_LIBS} pord)
+target_link_libraries(mumps INTERFACE mumps_common ${PREC_LIBS})
 
 install(TARGETS mumps_common mumps_common_c mumps_common_f mumps ${PREC_LIBS} EXPORT mumps-config
     DESTINATION lib
@@ -295,4 +296,4 @@ install(FILES
 if (BUILD_TESTS)
     enable_testing()
     add_subdirectory(examples)
-endif()
\ No newline at end of file
+endif()
diff --git a/examples/CMakeLists.txt b/examples/CMakeLists.txt
index f34f735..97f4b87 100644
--- a/examples/CMakeLists.txt
+++ b/examples/CMakeLists.txt
@@ -1,21 +1,29 @@
 if (UNIX OR MINGW)
-    INCLUDE( ProcessorCount )
+    include( ProcessorCount )
     ProcessorCount(SYSTEM_PROCESSOR_COUNT)
     
-    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
-    SET(TEST_FILE ${CMAKE_CURRENT_SOURCE_DIR}/input_simpletest_real)
+    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
+    set(TEST_FILE ${CMAKE_CURRENT_SOURCE_DIR}/input_simpletest_real)
     
     # Fortran double precision test
     add_executable(simpletest dsimpletest.F)
     target_include_directories(simpletest PRIVATE 
         ../include 
-        ${MPI_C_INCLUDE_PATH} ${MPI_Fortran_INCLUDE_PATH}
-    )
-    target_link_libraries(simpletest PRIVATE 
-        dmumps ${MPI_C_LIBRARIES} ${MPI_Fortran_LIBRARIES}
+     #   ${MPI_C_INCLUDE_PATH} ${MPI_Fortran_INCLUDE_PATH}
     )
+    target_link_libraries(simpletest PRIVATE
+        dmumps)# ${MPI_C_LIBRARIES} ${MPI_Fortran_LIBRARIES}
+    #)
+    if (MPI_${_lang_name}_LINK_FLAGS)
+   #     set_target_properties(simpletest PROPERTIES
+    #        LINK_FLAGS ${MPI_${_lang_name}_LINK_FLAGS})
+    endif ()
+    if (MPI_${_lang_name}_COMPILE_FLAGS)
+     #   set_target_properties(simpletest PROPERTIES
+      #      COMPILE_FLAGS ${MPI_${_lang_name}_COMPILE_FLAGS})
+    endif ()
     
-    SET(simpletest_wrap ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/simpletest_wrap.sh)
+    set(simpletest_wrap ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/simpletest_wrap.sh)
     add_custom_target(simpletest_wrap COMMAND simpletest < ${TEST_FILE})
     file(WRITE ${simpletest_wrap} "#!/bin/sh\n${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/simpletest < ${TEST_FILE}")
     execute_process(COMMAND chmod +x ${simpletest_wrap})
@@ -35,4 +43,4 @@ target_link_libraries(ctest PRIVATE mumps)
 add_test(c_test ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ctest)
 add_test(c_test_par ${MPIEXEC} 
     ${MPIEXEC_NUMPROC_FLAG} ${SYSTEM_PROCESSOR_COUNT}
-    ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ctest)
\ No newline at end of file
+    ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ctest)
